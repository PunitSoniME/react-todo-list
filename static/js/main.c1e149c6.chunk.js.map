{"version":3,"sources":["components/Todo/Todo.tsx","components/TodoList/TodoList.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Todo","todo","changeStatus","className","type","id","checked","finished","onChange","htmlFor","dangerouslySetInnerHTML","__html","name","style","Object","assign","textDecoration","TodoList","todos","filter","d","map","LOCAL_STORAGE_TODOS","App","useState","setTodos","todoRef","useRef","generateUniqueId","date","Date","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","getMilliseconds","useEffect","getStoredTodos","localStorage","getItem","arrayOfStoredTodos","JSON","parse","setItem","stringify","ref","placeholder","rows","onClick","value","current","oldTodos","remainingTodos","allTodos","find","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1e149c6.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Todo.css';\r\n\r\nexport default function Todo({ todo, changeStatus }: any) {\r\n\r\n    function changeTodoStatus() {\r\n        changeStatus(todo.id);\r\n    }\r\n\r\n    return (\r\n        <div className=\"todo\">\r\n            <input type=\"checkbox\" id={todo.id} checked={todo.finished} onChange={changeTodoStatus} />\r\n            <label htmlFor={todo.id} className=\"pl_1\" dangerouslySetInnerHTML={{ __html: todo.name }}\r\n                style={Object.assign({ textDecoration: todo.finished ? 'line-through' : 'none' })}>\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Todo from '../Todo/Todo';\r\nimport '../TodoList/TodoList.css'\r\n\r\nexport default function TodoList({ todos, changeStatus }: any) {\r\n    return <>\r\n        <h3 className=\"my-2\">Pending Todos...</h3>\r\n        <div className=\"todos-inner\">\r\n            {\r\n                todos.filter((d: any) => !d.finished).map((todo: any) => {\r\n                    return <Todo key={todo.id} todo={todo} changeStatus={changeStatus} />\r\n                })\r\n            }\r\n        </div>\r\n\r\n        <br />\r\n        <h3 className=\"my-2\">Commpleted Todos...</h3>\r\n        <div className=\"todos-inner\">\r\n            {\r\n                todos.filter((d: any) => d.finished).map((todo: any) => {\r\n                    return <Todo key={todo.id} todo={todo} changeStatus={changeStatus} />\r\n                })\r\n            }\r\n        </div>\r\n\r\n    </>\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport TodoList from './components/TodoList/TodoList';\n\nconst LOCAL_STORAGE_TODOS = 'stored_todo_list';\n\nfunction App() {\n\n  const [todos, setTodos] = useState<any>([]);\n  const todoRef = useRef<any>();\n\n  //  This will be called only on first reload\n  useEffect(() => {\n\n    let getStoredTodos = localStorage.getItem(LOCAL_STORAGE_TODOS);\n    if (getStoredTodos) {\n      let arrayOfStoredTodos = JSON.parse(getStoredTodos);\n      setTodos(arrayOfStoredTodos);\n    }\n  }, []);\n\n  function generateUniqueId() {\n    let date = new Date();\n    return `${date.getDate()}${date.getMonth() + 1}${date.getFullYear()}_${date.getHours()}${date.getMinutes()}${date.getSeconds()}${date.getMilliseconds()}`;\n  }\n\n  //  This will be called whenever we add any todo to update todo list\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_TODOS, JSON.stringify(todos));\n  }, [todos])\n\n  //  This will be called whenever we add any todo\n  function AddTodo() {\n    const value = todoRef.current.value;\n    if (value === '') return;\n\n    setTodos((oldTodos: any) => {\n      return [...oldTodos, { id: generateUniqueId(), name: value, finished: false }];\n    });\n\n    todoRef.current.value = null;\n  }\n\n  //  To Change Status Of Todo\n  function changeStatus(id: any) {\n    const allTodos = [...todos];\n    const todo = allTodos.find(d => d.id === id);\n    todo.finished = !todo.finished;\n    setTodos(allTodos);\n  }\n\n  //  Delete Finished Todos\n  function DeleteCompletedTodos() {\n    const allTodos = [...todos];\n    const remainingTodos = allTodos.filter(d => !d.finished);\n    setTodos(remainingTodos);\n  }\n\n  return (\n    <>\n      <div className=\"main\">\n        <textarea ref={todoRef} className=\"form-control\" placeholder=\"Enter Todo\" rows={4}></textarea>\n        <button type=\"submit\" onClick={AddTodo} className=\"btn btn-primary\">Add</button>\n        <button type=\"button\" onClick={DeleteCompletedTodos} className=\"btn btn-danger\">Delete Completed Todos</button>\n\n      </div>\n\n      <hr />\n\n      <TodoList todos={todos} changeStatus={changeStatus} />\n\n    </>\n  );\n\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}